{"ast":null,"code":"import axios from \"axios\";\n\n// export const getAllProduct = async (search) => {\n//     let res = {};\n//     if (search.length > 0) {\n//         res = await axios.get(`${process.env.REACT_APP_API_URL}/product/get-all?filter=name&filter=${search}`);\n//     } else {\n//         res = await axios.get(`${process.env.REACT_APP_API_URL}/product/get-all`);\n//     }\n//     return res.data;\n// }\n\nexport const getAllProduct = async (search, priceRange) => {\n  let res = {};\n  let queryString = `${process.env.REACT_APP_API_URL}/product/get-all?`;\n  if (search) {\n    queryString += `filter=name||filter=type&filter=${search}&`;\n    queryString += `minPrice=${priceRange[0]}&maxPrice=${priceRange[1]}`;\n  }\n  return res.data;\n};\n\n// export const getAllProduct = async (search, priceRange) => {\n//     const apiUrl = process.env.REACT_APP_API_URL + \"/product/get-all\";\n//     const params = new URLSearchParams();\n\n//     if (search) {\n//         // Assuming your backend can handle `search` as a general query that checks both 'name' and 'type'\n//         params.append('search', search);\n//     }\n\n//     params.append('minPrice', priceRange[0]);\n//     params.append('maxPrice', priceRange[1]);\n\n//     const queryString = `${apiUrl}?${params.toString()}`;\n//     const res = await axios.get(queryString);\n//     return res.data;\n// };","map":{"version":3,"names":["axios","getAllProduct","search","priceRange","res","queryString","process","env","REACT_APP_API_URL","data"],"sources":["D:/Tu/NamIII/HKII/test - Copy/src/services/ProductService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// export const getAllProduct = async (search) => {\r\n//     let res = {};\r\n//     if (search.length > 0) {\r\n//         res = await axios.get(`${process.env.REACT_APP_API_URL}/product/get-all?filter=name&filter=${search}`);\r\n//     } else {\r\n//         res = await axios.get(`${process.env.REACT_APP_API_URL}/product/get-all`);\r\n//     }\r\n//     return res.data;\r\n// }\r\n\r\nexport const getAllProduct = async (search, priceRange) => {\r\n    let res={};\r\n    let queryString = `${process.env.REACT_APP_API_URL}/product/get-all?`;\r\n    if (search) {\r\n        queryString += `filter=name||filter=type&filter=${search}&`;\r\n        queryString += `minPrice=${priceRange[0]}&maxPrice=${priceRange[1]}`;\r\n    }\r\n    \r\n    \r\n    return res.data;\r\n};\r\n\r\n\r\n// export const getAllProduct = async (search, priceRange) => {\r\n//     const apiUrl = process.env.REACT_APP_API_URL + \"/product/get-all\";\r\n//     const params = new URLSearchParams();\r\n\r\n//     if (search) {\r\n//         // Assuming your backend can handle `search` as a general query that checks both 'name' and 'type'\r\n//         params.append('search', search);\r\n//     }\r\n\r\n//     params.append('minPrice', priceRange[0]);\r\n//     params.append('maxPrice', priceRange[1]);\r\n\r\n//     const queryString = `${apiUrl}?${params.toString()}`;\r\n//     const res = await axios.get(queryString);\r\n//     return res.data;\r\n// };\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,UAAU,KAAK;EACvD,IAAIC,GAAG,GAAC,CAAC,CAAC;EACV,IAAIC,WAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,mBAAkB;EACrE,IAAIN,MAAM,EAAE;IACRG,WAAW,IAAK,mCAAkCH,MAAO,GAAE;IAC3DG,WAAW,IAAK,YAAWF,UAAU,CAAC,CAAC,CAAE,aAAYA,UAAU,CAAC,CAAC,CAAE,EAAC;EACxE;EAGA,OAAOC,GAAG,CAACK,IAAI;AACnB,CAAC;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}