{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tu\\\\NamIII\\\\HKII\\\\IE213\\\\test\\\\src\\\\components\\\\HeaderComponent\\\\HeaderComponent.jsx\",\n  _s = $RefreshSig$();\nimport { Input, Col } from 'antd';\nimport React, { useState } from 'react';\nimport { WapperHeader } from './style';\nimport { useDispatch } from 'react-redux';\nimport { searchProduct } from '../../redux/slides/productSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderComponent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('');\n\n  // Xử lý tìm kiếm khi người dùng nhập\n  const onChange = e => {\n    setSearch(e.target.value);\n  };\n\n  // Xử lý tìm kiếm khi người dùng nhấn Enter hoặc click vào nút tìm\n  const onSearch = value => {\n    dispatch(searchProduct(value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WapperHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Coll, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Input.Search, {\n          placeholder: \"Nh\\u1EADp t\\xECm ki\\u1EBFm\",\n          value: search,\n          onChange: onChange,\n          onSearch: onSearch,\n          enterButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(HeaderComponent, \"/UF0C/RbHuajgQMiCjzE9Gfs9uc=\", false, function () {\n  return [useDispatch];\n});\n_c = HeaderComponent;\nexport default HeaderComponent;\n\n// import React, { useState, useCallback } from 'react';\n// import { Input, Col } from 'antd';\n// import { useDispatch } from 'react-redux';\n// import { searchProduct } from '../../redux/slides/productSlice';\n// import debounce from 'lodash/debounce';\n\n// const HeaderComponent = () => {\n//     const dispatch = useDispatch();\n//     const [search, setSearch] = useState('');\n\n//     // Hàm debounce để hạn chế số lần dispatch action\n//     const debouncedDispatch = useCallback(\n//         debounce((searchValue) => {\n//             dispatch(searchProduct(searchValue));\n//         }, 300),\n//         [] // deps array rỗng để hàm debounce không bị tạo lại mỗi lần component render\n//     );\n\n//     // Xử lý tìm kiếm khi người dùng nhập\n//     const onChange = (e) => {\n//         const searchValue = e.target.value;\n//         setSearch(searchValue);\n//         debouncedDispatch(searchValue);\n//     };\n\n//     // Không cần sự kiện onSearch nếu bạn muốn hiển thị kết quả ngay lập tức\n\n//     return (\n//         <div>\n//             <Col span={6}></Col>\n//             <Col span={12}>\n//                 <Input.Search\n//                     placeholder=\"Nhập tìm kiếm\"\n//                     value={search}\n//                     onChange={onChange}\n//                     enterButton\n//                 />\n//             </Col>\n//             <Col span={6}></Col>\n//         </div>\n//     );\n// };\n\n// export default HeaderComponent;\n\n// import React, { useState } from 'react';\n// import { Input, AutoComplete } from 'antd';\n// import { useDispatch } from 'react-redux';\n// import { searchProduct } from '../../redux/slides/productSlice';\n// import debounce from 'lodash/debounce';\n\n// const HeaderComponent = () => {\n//     const dispatch = useDispatch();\n//     const [search, setSearch] = useState('');\n//     const [suggestions, setSuggestions] = useState([]);\n\n//     const fetchSuggestions = async (value) => {\n//         // Giả sử rằng bạn gọi một API và nhận được dữ liệu gợi ý\n//         const results = await callYourSearchSuggestionAPI(value);\n//         setSuggestions(results); // Cập nhật state với kết quả gợi ý\n//     };\n\n//     // Throttle hoặc debounce fetchSuggestions để giảm bớt số lần gọi API\n//     const debouncedFetchSuggestions = debounce(fetchSuggestions, 300);\n\n//     const onChange = (e) => {\n//         const value = e.target.value;\n//         setSearch(value);\n//         if (value) {\n//             debouncedFetchSuggestions(value);\n//         } else {\n//             setSuggestions([]);\n//         }\n//     };\n\n//     const onSearch = (value) => {\n//         // Thực hiện tìm kiếm đầy đủ khi người dùng nhấn Enter\n//         dispatch(searchProduct(value));\n//         // Bạn có thể thêm logic để chuyển hướng người dùng đến trang kết quả tìm kiếm tại đây\n//     };\n\n//     return (\n//         <div>\n//             <AutoComplete\n//                 options={suggestions.map(suggestion => ({ value: suggestion.title }))}\n//                 onSearch={onChange}\n//                 onSelect={onSearch}\n//             >\n//                 <Input.Search\n//                     placeholder=\"Nhập tìm kiếm\"\n//                     value={search}\n//                     onChange={onChange}\n//                     onSearch={onSearch}\n//                     enterButton\n//                 />\n//             </AutoComplete>\n//         </div>\n//     );\n// };\n\n// export default HeaderComponent;\nvar _c;\n$RefreshReg$(_c, \"HeaderComponent\");","map":{"version":3,"names":["Input","Col","React","useState","WapperHeader","useDispatch","searchProduct","jsxDEV","_jsxDEV","HeaderComponent","_s","dispatch","search","setSearch","onChange","e","target","value","onSearch","children","Coll","span","fileName","_jsxFileName","lineNumber","columnNumber","Search","placeholder","enterButton","_c","$RefreshReg$"],"sources":["D:/Tu/NamIII/HKII/IE213/test/src/components/HeaderComponent/HeaderComponent.jsx"],"sourcesContent":["import { Input, Col } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { WapperHeader } from './style';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchProduct } from '../../redux/slides/productSlice';\r\n\r\nconst HeaderComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n\r\n    // Xử lý tìm kiếm khi người dùng nhập\r\n    const onChange = (e) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    // Xử lý tìm kiếm khi người dùng nhấn Enter hoặc click vào nút tìm\r\n    const onSearch = (value) => {\r\n        dispatch(searchProduct(value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <WapperHeader>\r\n                <Coll span={6}></Coll>\r\n                <Col span={12}>\r\n                    <Input.Search\r\n                        placeholder=\"Nhập tìm kiếm\"\r\n                        value={search}\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                        enterButton\r\n                    />\r\n                </Col>\r\n                <Col span={6}></Col>\r\n            </WapperHeader>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n// import React, { useState, useCallback } from 'react';\r\n// import { Input, Col } from 'antd';\r\n// import { useDispatch } from 'react-redux';\r\n// import { searchProduct } from '../../redux/slides/productSlice';\r\n// import debounce from 'lodash/debounce';\r\n\r\n// const HeaderComponent = () => {\r\n//     const dispatch = useDispatch();\r\n//     const [search, setSearch] = useState('');\r\n\r\n//     // Hàm debounce để hạn chế số lần dispatch action\r\n//     const debouncedDispatch = useCallback(\r\n//         debounce((searchValue) => {\r\n//             dispatch(searchProduct(searchValue));\r\n//         }, 300),\r\n//         [] // deps array rỗng để hàm debounce không bị tạo lại mỗi lần component render\r\n//     );\r\n\r\n//     // Xử lý tìm kiếm khi người dùng nhập\r\n//     const onChange = (e) => {\r\n//         const searchValue = e.target.value;\r\n//         setSearch(searchValue);\r\n//         debouncedDispatch(searchValue);\r\n//     };\r\n\r\n//     // Không cần sự kiện onSearch nếu bạn muốn hiển thị kết quả ngay lập tức\r\n\r\n//     return (\r\n//         <div>\r\n//             <Col span={6}></Col>\r\n//             <Col span={12}>\r\n//                 <Input.Search\r\n//                     placeholder=\"Nhập tìm kiếm\"\r\n//                     value={search}\r\n//                     onChange={onChange}\r\n//                     enterButton\r\n//                 />\r\n//             </Col>\r\n//             <Col span={6}></Col>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HeaderComponent;\r\n\r\n// import React, { useState } from 'react';\r\n// import { Input, AutoComplete } from 'antd';\r\n// import { useDispatch } from 'react-redux';\r\n// import { searchProduct } from '../../redux/slides/productSlice';\r\n// import debounce from 'lodash/debounce';\r\n\r\n// const HeaderComponent = () => {\r\n//     const dispatch = useDispatch();\r\n//     const [search, setSearch] = useState('');\r\n//     const [suggestions, setSuggestions] = useState([]);\r\n\r\n//     const fetchSuggestions = async (value) => {\r\n//         // Giả sử rằng bạn gọi một API và nhận được dữ liệu gợi ý\r\n//         const results = await callYourSearchSuggestionAPI(value);\r\n//         setSuggestions(results); // Cập nhật state với kết quả gợi ý\r\n//     };\r\n\r\n//     // Throttle hoặc debounce fetchSuggestions để giảm bớt số lần gọi API\r\n//     const debouncedFetchSuggestions = debounce(fetchSuggestions, 300);\r\n\r\n//     const onChange = (e) => {\r\n//         const value = e.target.value;\r\n//         setSearch(value);\r\n//         if (value) {\r\n//             debouncedFetchSuggestions(value);\r\n//         } else {\r\n//             setSuggestions([]);\r\n//         }\r\n//     };\r\n\r\n//     const onSearch = (value) => {\r\n//         // Thực hiện tìm kiếm đầy đủ khi người dùng nhấn Enter\r\n//         dispatch(searchProduct(value));\r\n//         // Bạn có thể thêm logic để chuyển hướng người dùng đến trang kết quả tìm kiếm tại đây\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <AutoComplete\r\n//                 options={suggestions.map(suggestion => ({ value: suggestion.title }))}\r\n//                 onSearch={onChange}\r\n//                 onSelect={onSearch}\r\n//             >\r\n//                 <Input.Search\r\n//                     placeholder=\"Nhập tìm kiếm\"\r\n//                     value={search}\r\n//                     onChange={onChange}\r\n//                     onSearch={onSearch}\r\n//                     enterButton\r\n//                 />\r\n//             </AutoComplete>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HeaderComponent;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,GAAG,QAAQ,MAAM;AACjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,SAAS;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,QAAQ,GAAIC,CAAC,IAAK;IACpBF,SAAS,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAID,KAAK,IAAK;IACxBN,QAAQ,CAACL,aAAa,CAACW,KAAK,CAAC,CAAC;EAClC,CAAC;EAED,oBACIT,OAAA;IAAAW,QAAA,eACIX,OAAA,CAACJ,YAAY;MAAAe,QAAA,gBACTX,OAAA,CAACY,IAAI;QAACC,IAAI,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBjB,OAAA,CAACP,GAAG;QAACoB,IAAI,EAAE,EAAG;QAAAF,QAAA,eACVX,OAAA,CAACR,KAAK,CAAC0B,MAAM;UACTC,WAAW,EAAC,4BAAe;UAC3BV,KAAK,EAAEL,MAAO;UACdE,QAAQ,EAAEA,QAAS;UACnBI,QAAQ,EAAEA,QAAS;UACnBU,WAAW;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNjB,OAAA,CAACP,GAAG;QAACoB,IAAI,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAAf,EAAA,CA/BKD,eAAe;EAAA,QACAJ,WAAW;AAAA;AAAAwB,EAAA,GAD1BpB,eAAe;AAiCrB,eAAeA,eAAe;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}